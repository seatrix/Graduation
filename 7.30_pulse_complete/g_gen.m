clear all
clc

bit_rate = 16;
T = 1/bit_rate;  % Tb
f_simulation = 128;  % 采样频率
T_s = 1/f_simulation;  % 采样间隔
BT = 0.3;  % 高斯滤波器 BT带宽
alpha = sqrt(log(2))/(2*pi*BT);  % 高斯滤波器 alpha参数

t_gaussian = -T*5/2:1/f_simulation:T*5/2-1/f_simulation;
data = rectpuls(t_gaussian, T);

h = 1/(sqrt(2*pi)*alpha*T)*exp(-t_gaussian.^2/(2*alpha^2*T^2)); 
h = h/(sum(h));

temp = conv(data, h);
g_128 = temp(5*T*f_simulation/2+1:5*T*f_simulation+5*T*f_simulation/2);


h(1) = g_128(33);
h(2) = g_128(25);
h(3) = g_128(17);
h(4) = g_128(9);
h(5) = g_128(1);
h(6) = g_128(33)+g_128(34);
h(7) = g_128(25)+g_128(26);
h(8) = g_128(17)+g_128(18);
h(9) = g_128(9)+g_128(10);
h(10) = g_128(1)+g_128(2);
h(11) = g_128(33)+g_128(34)+g_128(35);
h(12) = g_128(25)+g_128(26)+g_128(27);
h(13) = g_128(17)+g_128(18)+g_128(19);
h(14) = g_128(9)+g_128(10)+g_128(11);
h(15) = g_128(1)+g_128(2)+g_128(3);
h(16) = g_128(33)+g_128(34)+g_128(35)+g_128(36);
h(17) = g_128(25)+g_128(26)+g_128(27)+g_128(28);
h(18) = g_128(17)+g_128(18)+g_128(19)+g_128(20);
h(19) = g_128(9)+g_128(10)+g_128(11)+g_128(12);
h(20) = g_128(1)+g_128(2)+g_128(3)+g_128(4);
h(21) = g_128(33)+g_128(34)+g_128(35)+g_128(36)+g_128(37);
h(22) = g_128(25)+g_128(26)+g_128(27)+g_128(28)+g_128(29);
h(23) = g_128(17)+g_128(18)+g_128(19)+g_128(20)+g_128(21);
h(24) = g_128(9)+g_128(10)+g_128(11)+g_128(12)+g_128(13);
h(25) = g_128(1)+g_128(2)+g_128(3)+g_128(4)+g_128(5);
h(26) = g_128(33)+g_128(34)+g_128(35)+g_128(36)+g_128(37)+g_128(38);
h(27) = g_128(25)+g_128(26)+g_128(27)+g_128(28)+g_128(29)+g_128(30);
h(28) = g_128(17)+g_128(18)+g_128(19)+g_128(20)+g_128(21)+g_128(22);
h(29) = g_128(9)+g_128(10)+g_128(11)+g_128(12)+g_128(13)+g_128(14);
h(30) = g_128(1)+g_128(2)+g_128(3)+g_128(4)+g_128(5)+g_128(6);
h(31) = g_128(33)+g_128(34)+g_128(35)+g_128(36)+g_128(37)+g_128(38)+g_128(39);
h(32) = g_128(25)+g_128(26)+g_128(27)+g_128(28)+g_128(29)+g_128(30)+g_128(31);
h(33) = g_128(17)+g_128(18)+g_128(19)+g_128(20)+g_128(21)+g_128(22)+g_128(23);
h(34) = g_128(9)+g_128(10)+g_128(11)+g_128(12)+g_128(13)+g_128(14)+g_128(15);
h(35) = g_128(1)+g_128(2)+g_128(3)+g_128(4)+g_128(5)+g_128(6)+g_128(7);
h(36) = g_128(33)+g_128(34)+g_128(35)+g_128(36)+g_128(37)+g_128(38)+g_128(39)+g_128(40);
h(37) = g_128(25)+g_128(26)+g_128(27)+g_128(28)+g_128(29)+g_128(30)+g_128(31)+g_128(32);
h(38) = g_128(17)+g_128(18)+g_128(19)+g_128(20)+g_128(21)+g_128(22)+g_128(23)+g_128(24);
h(39) = g_128(9)+g_128(10)+g_128(11)+g_128(12)+g_128(13)+g_128(14)+g_128(15)+g_128(16);
h(40) = g_128(1)+g_128(2)+g_128(3)+g_128(4)+g_128(5)+g_128(6)+g_128(7)+g_128(8);